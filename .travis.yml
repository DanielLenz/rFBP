language: cpp

matrix:
  include:
# linux + gcc
    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@7.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=g++-7 && CXX=g++-7"

    - os: linux
      compiler: gcc
      name: ubuntu 14.04 - gcc@8.0
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

# linux + clang

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@3.9
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9 && LINKER_FLAGS=-stdlib=libc++ -lc++abi && CXXFLAGS=-stdlib=libc++ && CMAKE_C_COMPILER=${CC} && CMAKE_CXX_COMPILER=${CXX} && CMAKE_LINKER=${CXX}"

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@4.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && LINKER_FLAGS=-stdlib=libc++ -lc++abi && CXXFLAGS=-stdlib=libc++ && CMAKE_C_COMPILER=${CC} && CMAKE_CXX_COMPILER=${CXX} && CMAKE_LINKER=${CXX}"

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@5.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0 && LINKER_FLAGS=-stdlib=libc++ -lc++abi && CXXFLAGS=-stdlib=libc++ && CMAKE_C_COMPILER=${CC} && CMAKE_CXX_COMPILER=${CXX} && CMAKE_LINKER=${CXX}"

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@6.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0 && LINKER_FLAGS=-stdlib=libc++ -lc++abi && CXXFLAGS=-stdlib=libc++ && CMAKE_C_COMPILER=${CC} && CMAKE_CXX_COMPILER=${CXX} && CMAKE_LINKER=${CXX}"

    - os: linux
      compiler: clang
      name: ubuntu 14.04 - clang@7.0
      addons:
        apt:
          update: true
          sources:
            - llvm-toolchain-trusty-7.0
          packages:
            - clang-7.0
      env:
        - MATRIX_EVAL="CC=clang-7.0 && CXX=clang++-7.0 && LINKER_FLAGS=-stdlib=libc++ -lc++abi && CXXFLAGS=-stdlib=libc++ && CMAKE_C_COMPILER=${CC} && CMAKE_CXX_COMPILER=${CXX} && CMAKE_LINKER=${CXX}"

# osx + gcc

    - os: osx
      compiler: gcc
      name: macOS - g++-7
      addons:
        homebrew:
          update: true
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: osx
      compiler: gcc
      name: macOS - g++-8
      addons:
        homebrew:
          update: true
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

# osx + clang
    - os: osx
      compiler: clang
      name: macOS - native clang (llvm backend)
      env:
        - MATRIX_EVAL=""

before_install:
  - travis_retry eval "${MATRIX_EVAL}"
  - pip install --user codecov
  - sudo pip install -r requirements.txt

install:
  # CMake upgrade

  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Darwin-x86_64.tar.gz   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then tar -xzf cmake-3.13.1-Darwin-x86_64.tar.gz                                                    ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then export PATH=$PWD/cmake-3.13.1-Darwin-x86_64/CMake.app/Contents/bin:$PATH                      ;fi

  ###############################################################################################################################################

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget --no-check-certificate https://cmake.org/files/v3.13/cmake-3.13.1-Linux-x86_64.tar.gz    ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar -xzf cmake-3.13.1-Linux-x86_64.tar.gz                                                     ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=$PWD/cmake-3.13.1-Linux-x86_64/bin:$PATH                                          ;fi

before_script:
  - mkdir build_debug
  - cd build_debug
  - cmake .. -DCMAKE_BUILD_TYPE="Debug" -DOMP=OFF
  - cd ..
  - mkdir build_release
  - cd build_release
  - cmake .. -DCMAKE_BUILD_TYPE="Release" -DOMP=ON
  - cd build_release

script:
  - cd build_debug   && cmake --build . --target install -- -j8 && cd ..
  - cd build_release && cmake --build . --target install -- -j8 && cd ..
